#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const archiver = require('archiver');
const { hashElement } = require('folder-hash');

const fNoChecksum = process.argv[3] === 'nosum';
const sPathT = path.resolve(process.cwd(), '..', 'tmp.zip');
const out = fs.createWriteStream(sPathT);
const archive = archiver('zip', {
  zlib: { level: 9 }
});
let sFilename = (process.argv[2]
  ? ('.' + process.argv[2]) 
  : '');

sFilename += '.zip';

out.on('close', function() {
  if (fNoChecksum) {
    if (process.argv[2])
      fs.renameSync(sPathT, path.resolve(process.cwd(), '..', process.argv[2] + '.zip'));
      
    console.log('Zip file saved as ' + sFilename);
  }
  else {
    hashElement(process.cwd(), {
        folders: { exclude: ['.*', 'node_modules'] },
        files: { include: ['*.ts', '*.js', '*.html', '*.htm', '*.css', '*.scss'] },
        encoding: 'hex'
      })
      .then(o => {
        const sCs = o['hash'];

        fs.renameSync(sPathT, path.resolve(process.cwd(), '..', sCs + sFilename));
        console.log('Zip file saved as ' + sCs + sFilename + '. Please upload this file to eConestoga and no other file.');
      })
      .catch(err => {
        console.error('Zip file failed: ', err);
      });
  }
});

archive.pipe(out);
archive.on('error', function(err) {
  throw err;
});

archive.glob('**/*', { ignore: ['**/node_modules/**/*', '**/node_modules', '**/platforms', '**/platforms/**/*'] }, false);
archive.finalize();